### Calendar Application for Communication Tracking

This codebase provides the implementation for a React-based Calendar Application for Communication Tracking. It includes the Admin Module, User Module, and optional Reporting and Analytics Module.

---

#### Project Structure
- **src/**
  - **components/**: Reusable React components
  - **pages/**: Application pages (Admin, User Dashboard, Reports, etc.)
  - **services/**: API interaction logic
  - **utils/**: Utility functions
  - **App.js**: Main application entry
  - **index.js**: React entry point
  - **styles/**: Shared stylesheets

---

#### Admin Module

##### Company Management Component
```jsx
// src/components/CompanyManagement.js
import React, { useState } from 'react';

const CompanyManagement = () => {
  const [companies, setCompanies] = useState([]);
  const [form, setForm] = useState({ name: '', location: '', linkedin: '', emails: '', phones: '', comments: '', periodicity: '' });

  const handleInputChange = (e) => {
    const { name, value } = e.target;
    setForm({ ...form, [name]: value });
  };

  const addCompany = () => {
    setCompanies([...companies, form]);
    setForm({ name: '', location: '', linkedin: '', emails: '', phones: '', comments: '', periodicity: '' });
  };

  return (
    <div>
      <h2>Company Management</h2>
      <form>
        <input name="name" placeholder="Name" value={form.name} onChange={handleInputChange} />
        <input name="location" placeholder="Location" value={form.location} onChange={handleInputChange} />
        <input name="linkedin" placeholder="LinkedIn Profile" value={form.linkedin} onChange={handleInputChange} />
        <input name="emails" placeholder="Emails" value={form.emails} onChange={handleInputChange} />
        <input name="phones" placeholder="Phone Numbers" value={form.phones} onChange={handleInputChange} />
        <input name="comments" placeholder="Comments" value={form.comments} onChange={handleInputChange} />
        <input name="periodicity" placeholder="Communication Periodicity" value={form.periodicity} onChange={handleInputChange} />
        <button type="button" onClick={addCompany}>Add Company</button>
      </form>
      <ul>
        {companies.map((company, index) => (
          <li key={index}>{company.name}</li>
        ))}
      </ul>
    </div>
  );
};

export default CompanyManagement;
```

##### Communication Methods Component
```jsx
// src/components/CommunicationMethods.js
import React, { useState } from 'react';

const CommunicationMethods = () => {
  const [methods, setMethods] = useState([
    { name: 'LinkedIn Post', description: '', sequence: 1, mandatory: true },
    { name: 'LinkedIn Message', description: '', sequence: 2, mandatory: true },
    { name: 'Email', description: '', sequence: 3, mandatory: true },
    { name: 'Phone Call', description: '', sequence: 4, mandatory: true },
    { name: 'Other', description: '', sequence: 5, mandatory: false },
  ]);

  const addMethod = (method) => {
    setMethods([...methods, method]);
  };

  return (
    <div>
      <h2>Communication Methods</h2>
      <ul>
        {methods.map((method, index) => (
          <li key={index}>{method.name}</li>
        ))}
      </ul>
    </div>
  );
};

export default CommunicationMethods;
```

---

#### User Module

##### Dashboard Component
```jsx
// src/components/Dashboard.js
import React from 'react';

const Dashboard = ({ companies }) => {
  return (
    <div>
      <h2>Dashboard</h2>
      <table>
        <thead>
          <tr>
            <th>Company Name</th>
            <th>Last Five Communications</th>
            <th>Next Scheduled Communication</th>
          </tr>
        </thead>
        <tbody>
          {companies.map((company, index) => (
            <tr key={index}>
              <td>{company.name}</td>
              <td>{/* Render last five communications */}</td>
              <td>{/* Render next scheduled communication */}</td>
            </tr>
          ))}
        </tbody>
      </table>
    </div>
  );
};

export default Dashboard;
```

##### Calendar Component
```jsx
// src/components/CalendarView.js
import React from 'react';
import FullCalendar from '@fullcalendar/react';
import dayGridPlugin from '@fullcalendar/daygrid';

const CalendarView = ({ events }) => {
  return (
    <div>
      <h2>Calendar</h2>
      <FullCalendar plugins={[dayGridPlugin]} events={events} />
    </div>
  );
};

export default CalendarView;
```

---

#### Services

##### Mock Data Service
```jsx
// src/services/dataService.js
export const fetchCompanies = () => {
  return [
    { name: 'Company A', location: 'New York', linkedin: 'linkedin.com/company-a', emails: 'contact@companya.com', phones: '1234567890', comments: 'Priority client', periodicity: '2 weeks' },
    { name: 'Company B', location: 'London', linkedin: 'linkedin.com/company-b', emails: 'contact@companyb.com', phones: '0987654321', comments: '', periodicity: '1 month' },
  ];
};
```

---

#### App.js
```jsx
// src/App.js
import React from 'react';
import CompanyManagement from './components/CompanyManagement';
import CommunicationMethods from './components/CommunicationMethods';
import Dashboard from './components/Dashboard';
import CalendarView from './components/CalendarView';
import { fetchCompanies } from './services/dataService';

function App() {
  const companies = fetchCompanies();
  const events = companies.map((company, index) => ({
    title: `Next Communication with ${company.name}`,
    date: '2024-01-01',
  }));

  return (
    <div>
      <CompanyManagement />
      <CommunicationMethods />
      <Dashboard companies={companies} />
      <CalendarView events={events} />
    </div>
  );
}

export default App;
```

---

#### Dependencies
Install the necessary dependencies with:
```bash
npm install react react-dom fullcalendar @fullcalendar/react @fullcalendar/daygrid
```
